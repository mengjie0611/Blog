(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{336:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"常用前端面试参考总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用前端面试参考总结"}},[t._v("#")]),t._v(" 常用前端面试参考总结")]),t._v(" "),s("p",[t._v("标签（空格分隔）： Summarize Interview")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"原型与原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链"}},[t._v("#")]),t._v(" 原型与原型链")]),t._v(" "),s("h3",{attrs:{id:"原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[t._v("#")]),t._v(" 原型")]),t._v(" "),s("ul",[s("li",[t._v("函数的prototype属性(图)\n"),s("ul",[s("li",[t._v("每个函数都有一个prototype属性, 它默认指向一个Object空对象(即称为: 原型对象)")]),t._v(" "),s("li",[t._v("原型对象中有一个属性constructor, 它指向函数对象")])])]),t._v(" "),s("li",[t._v("给原型对象添加属性(一般都是方法)\n"),s("ul",[s("li",[t._v("作用: 函数的所有实例对象自动拥有原型中的属性(方法)")]),t._v(" "),s("li",[t._v("原型对象上的方法一般给其实例对象调用")])])])]),t._v(" "),s("h3",{attrs:{id:"显式原型与隐式原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显式原型与隐式原型"}},[t._v("#")]),t._v(" 显式原型与隐式原型")]),t._v(" "),s("ul",[s("li",[t._v("每个函数对象function都有一个prototype，即显式原型")]),t._v(" "),s("li",[t._v("每个实例对象都有一个 "),s("code",[t._v("__proto__")]),t._v(" ，可称为隐式原型")]),t._v(" "),s("li",[t._v("对象的隐式原型的值为其对应构造函数的显式原型的值 ===> 都指向函数对象")]),t._v(" "),s("li",[t._v("内存结构(图)")]),t._v(" "),s("li",[t._v("总结:\n"),s("ul",[s("li",[t._v("函数的prototype属性： 在定义函数时自动添加的，默认值是一个空Object对象")]),t._v(" "),s("li",[t._v("对象的"),s("code",[t._v("__proto__")]),t._v("属性：创建对象时自动添加的，默认值为构造函数的prototype属性值")]),t._v(" "),s("li",[t._v("程序员能直接操作显式原型，但不能直接操作隐式原型(ES6之前)")])])]),t._v(" "),s("li",[t._v("举个例子")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// Fn()\nvar Fn = function () {}  // 执行这条函数定义语句, 函数体并没有执行\n\n// 每个函数function都有一个prototype，即显式原型(属性)\nconsole.log(Fn.prototype)\n\n// 每个实例对象都有一个__proto__，可称为隐式原型(属性)\nvar fn = new Fn()\nconsole.log(fn.__proto__)\n\n// 对象的隐式原型的值为其对应构造函数的显式原型的值\nconsole.log(fn.__proto__ === Fn.prototype)  // true\n\n/*\n 1. prototype属性: 函数对象\n    什么时候添加? 函数被定义时(创建函数对象时自动添加)\n    值是多少?  空的object实例对象: this.prototype = {}  this.prototype.constructor = this\n\n2. __proto__属性: 实例对象\n    什么时候添加? 创建实例对象时自动添加\n    值是多少?   构造函数的prototype属性值: this.__proto__ = Fn.prototype\n */\n\n/*\n    执行函数: 执行函数体中的所有语句\n    执行函数定义: 本质是创建函数对象\n*/\nconsole.log(Object.prototype.__proto__);  // null\n")])])]),s("h3",{attrs:{id:"原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),s("ul",[s("li",[t._v("原型链(图解)")]),t._v(" "),s("li",[t._v("访问一个对象的属性时，\n"),s("ul",[s("li",[t._v("先在自身属性中查找，找到返回")]),t._v(" "),s("li",[t._v("如果没有,再沿着"),s("code",[t._v("__proto__")]),t._v("这条链向上查找, 找到返回")]),t._v(" "),s("li",[t._v("如果最终没找到,返回undefined")])])]),t._v(" "),s("li",[t._v("别名：隐式原型链")]),t._v(" "),s("li",[t._v("作用："),s("strong",[t._v("查找对象的属性(方法)")])]),t._v(" "),s("li",[t._v("构造函数/原型/实体对象的关系(图解)")]),t._v(" "),s("li",[t._v("构造函数/原型/实体对象的关系2(图解)")]),t._v(" "),s("li",[t._v("举个例子")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("console.log(Function.prototype===Function.__proto__)  // true\nconsole.log(Object.prototype.__proto__)  // null\nconsole.log(Object.prototype)\nfunction Fn() {\n    this.test1 = function () {\n        console.log('test1()')\n    }\n}\nFn.prototype.test2 = function () {\n    console.log('test2()')\n}\nvar fn = new Fn()\n\nfn.test1()\nfn.test2()\nconsole.log(fn.toString())\nconsole.log(fn.test3)  // undefined\nfn.test3()\n\n// 详情请看githubMarkdownPhotos分析图\n")])])]),s("ul",[s("li",[s("strong",[t._v("原型链总结")]),t._v(" "),s("ul",[s("li",[t._v("查找对象的属性沿着原型链查找，查找变量沿着作用域链查找")]),t._v(" "),s("li",[t._v("函数对象既有"),s("code",[t._v("prototype")]),t._v("属性，也有"),s("code",[t._v("__proto__")]),t._v("属性（函数的本质是被new出来的）")]),t._v(" "),s("li",[t._v("所有函数对象的"),s("code",[t._v("__proto__")]),t._v("属性值都相等，都等于大写的Function的 "),s("code",[t._v("prototype")])]),t._v(" "),s("li",[t._v("所有函数都是Function的实例，包括它自己。\n"),s("code",[t._v("Function.prototype === Function.__proto__ // true")])]),t._v(" "),s("li",[t._v("非函数对象（实例对象）肯定是其对应构造函数的实例")])])])]),t._v(" "),s("h3",{attrs:{id:"原型链的属性问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链的属性问题"}},[t._v("#")]),t._v(" 原型链的属性问题")]),t._v(" "),s("ul",[s("li",[t._v("读取对象的属性值时: 会自动到原型链中查找")]),t._v(" "),s("li",[t._v("设置对象的属性值时: 不会查找原型链, 如果当前对象中没有此属性, 直接添加此属性并设置其值")]),t._v(" "),s("li",[t._v("即："),s("strong",[t._v("当给对象属性赋值时不会使用原型链, 而只是在当前对象中进行操作")])]),t._v(" "),s("li",[t._v("方法一般定义在原型中, 属性一般通过构造函数定义在对象本身上")]),t._v(" "),s("li",[t._v("举个例子")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function Person(name, age) {\n    this.name = name;\n    this.age = age;\n}\nPerson.prototype.setName = function (name) {\n    this.name = name;\n}\nPerson.prototype.sex = '男';\n\nvar p1 = new Person('Tom', 12)\np1.setName('Jack')\nconsole.log(p1.name, p1.age, p1.sex) // Jack 12 '男'\n\np1.sex = '女'  // 设置属性值时, 不会查看原型链\nconsole.log(p1.name, p1.age, p1.sex) //Jack 12 '女'\n\nvar p2 = new Person('Bob', 23)\nconsole.log(p2.name, p2.age, p2.sex) //'Bob' 23 '男'\n")])])]),s("h3",{attrs:{id:"探索instanceof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#探索instanceof"}},[t._v("#")]),t._v(" 探索instanceof")]),t._v(" "),s("ul",[s("li",[t._v("instanceof是如何判断的?\n"),s("ul",[s("li",[t._v("表达式: A instanceof B")]),t._v(" "),s("li",[t._v("如果B函数的显式原型对象在A对象的原型链上, 返回true, 否则返回false")]),t._v(" "),s("li",[t._v("A可以寻找多步，B只能找一步到自己的显式原型上")])])]),t._v(" "),s("li",[t._v("Function是通过new自己产生的实例。即所有函数都是Function的实例包括它自身。")]),t._v(" "),s("li",[t._v("几点总结\n"),s("ul",[s("li",[s("code",[t._v("Object created by Function")])]),t._v(" "),s("li",[s("code",[t._v("Object 是 Function 的实例")])]),t._v(" "),s("li",[s("code",[t._v("Object 是 Object 的实例")])])])]),t._v(" "),s("li",[t._v("理解实例")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("console.log(Object instanceof Function) // true\nconsole.log(Object instanceof Object) // true\nconsole.log(Function instanceof Object) // true\nconsole.log(Function instanceof Function) // true\nconsole.log(Object instanceof Foo); // false\n\nconsole.log(Function.prototype) // 不是Object的实例  ƒ () { [native code] }\nconsole.log(Function.prototype.__proto__===Object.prototype) // true\n")])])]),s("ul",[s("li",[t._v("原型与原型链分析详图")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function Foo () {}\nvar f1 = new Foo()\nvar f2 = new Foo()\nvar o1 = {}\nvar o2 = {}\n")])])]),s("p",[s("img",{attrs:{src:"https://i.imgur.com/Q3nxgq6.png",alt:"原型与原型链分析"}})]),t._v(" "),s("h3",{attrs:{id:"面试题及总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试题及总结"}},[t._v("#")]),t._v(" 面试题及总结")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 测试题 1\nvar A = function() {}\nA.prototype.n = 1\nvar b = new A()\n\nA.prototype = {\n    n: 2,\n    m: 3\n}\nvar c = new A()\nconsole.log(b.n, b.m, c.n, c.m) //  1 undefined  2  3\n\n// 测试题2\nvar F = function(){};\nObject.prototype.a = function(){\n    console.log('a()')\n};\nFunction.prototype.b = function(){\n    console.log('b()')\n};\nvar f = new F();\nf.a()     // a()\nf.b()     // f.b is not a function\nF.a()     // a()\nF.b()     // b()\n\n\n\x3c!--\n原型链（隐式原型链）：作用查找对象的属性\n    访问一个对象的属性时，先在自身属性中查找，找到返回；\n    如果没有再沿着 __proto__ 这条链向上查找，找到返回，如果最终没有找到，则返回undefined\n\nA instanceof B  的判断\n    如果B函数的显式原型对象在A对象的原型链上, 返回true, 否则返回false\n\nprototype 与 __proto__ 在创建的时候相关联，在执行的时候没有关联\n--\x3e\n")])])]),s("h2",{attrs:{id:"webpack及构建工具的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack及构建工具的理解"}},[t._v("#")]),t._v(" webpack及构建工具的理解")]),t._v(" "),s("h3",{attrs:{id:"构建工具的功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建工具的功能"}},[t._v("#")]),t._v(" 构建工具的功能")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("代码转换")]),t._v("：TypeScript 编译成 JavaScript、SCSS 编译成 CSS 等。（开发写的代码有些浏览器无法识别，如ES6语法）")]),t._v(" "),s("li",[s("strong",[t._v("文件优化")]),t._v("：压缩 JavaScript、CSS、HTML 代码，压缩合并图片等。（压缩代码）")]),t._v(" "),s("li",[s("strong",[t._v("模块合并")]),t._v("：在采用模块化的项目里会有很多个模块和文件，需要构建功能把模块分类合并成一个文件。")]),t._v(" "),s("li",[s("strong",[t._v("代码分割")]),t._v("：提取多个页面的公共代码、提取首屏不需要执行部分的代码让其异步加载。")]),t._v(" "),s("li",[s("strong",[t._v("自动刷新")]),t._v("：监听本地源代码的变化，自动重新构建、刷新浏览器。 live reload 自动刷新 / hot reload 热模替换（HMR）（开发环境下修改代码后可以自动刷新浏览器看到最新的效果，可以监视源码的变化）")]),t._v(" "),s("li",[s("strong",[t._v("代码校验")]),t._v("：在代码被提交到仓库前需要校验代码是否符合规范，以及单元测试是否通过。")])]),t._v(" "),s("h3",{attrs:{id:"模块化打包和非模块化打包思想差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块化打包和非模块化打包思想差异"}},[t._v("#")]),t._v(" 模块化打包和非模块化打包思想差异")]),t._v(" "),s("ul",[s("li",[t._v("非模块化打包：先对文件进行分类（如js/img/css等），然后分别打包")]),t._v(" "),s("li",[t._v("模块化打包：将所有资源看成模块，而所有的模块之间都是有关系的，项目中的资源是相互关联的节点通过入口js形成一个网(图)的结构。\n"),s("ul",[s("li",[t._v("从入口开始递归的查找所有相关联的模块")]),t._v(" "),s("li",[t._v("找到一个模块(如css)后会找对应的loader，模块文件会进行正则匹配的")]),t._v(" "),s("li",[t._v("四个核心概念：entry | output | module(loader) | plugins")]),t._v(" "),s("li",[t._v("loader模块加载器，将非js模块打包成webpack能理解的js模块")]),t._v(" "),s("li",[t._v("图片处理推荐使用 "),s("code",[t._v("url-loader")]),t._v("，配置选项可以对图片进行限制，小于此限制的会会通过base64处理的")])])])]),t._v(" "),s("h3",{attrs:{id:"webpack的核心概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack的核心概念"}},[t._v("#")]),t._v(" webpack的核心概念")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Entry")]),t._v("：入口，Webpack进行打包的起始点(文件)")]),t._v(" "),s("li",[s("strong",[t._v("Output")]),t._v("：出口，webpack编译打包生成的bundle(文件)")]),t._v(" "),s("li",[s("strong",[t._v("Loader")]),t._v("：模块加载(转换)器，将非js模块包装成webpack能理解的js模块\n"),s("ul",[s("li",[t._v("（举例：如处理css要用到style-loader/css-loader;处理img使用file-loader/url-loader）")])])]),t._v(" "),s("li",[s("strong",[t._v("Plugin")]),t._v("：插件，在Webpack构建流程中的特定时机插入具有特定功能的代码\n"),s("ul",[s("li",[t._v("（举例：CleanPlugin一开始就会清除指定的文件/夹；")]),t._v(" "),s("li",[t._v("ExtractTextPlugin用于样式的抽取，用来从js中分离出css并单独打包；")]),t._v(" "),s("li",[t._v("CopyPlugin复制静态资源；")]),t._v(" "),s("li",[t._v("webpack.HashedModuleIdsPlugin根据代码内容生成hash作为模块的id(默认是下标)；")]),t._v(" "),s("li",[t._v("webpack.optimize.CommonsChunkPlugin将第三方模块单独打包")]),t._v(" "),s("li",[t._v("……）")])])]),t._v(" "),s("li",[t._v("Module：模块，在 Webpack眼里一切皆模块，默认只识别js文件，如果是其它类型文件利用对应的loader转换为js模块")]),t._v(" "),s("li",[t._v("Chunk：代码块，一个 Chunk 由多个模块组合而成，最终浏览器执行的是webpack打包生成的chunk文件(bundle同理)")])]),t._v(" "),s("h3",{attrs:{id:"webpack的其他概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack的其他概念"}},[t._v("#")]),t._v(" webpack的其他概念")]),t._v(" "),s("ul",[s("li",[s("img",{attrs:{src:"http://static.zybuluo.com/MarlonChiu/12qcvudloms3ft00fsxugjtt/webpack%E5%85%B6%E5%AE%83%E6%A6%82%E5%BF%B5_1.png",alt:"webpack其它概念_1.png-39.4kB"}})]),t._v(" "),s("li",[s("img",{attrs:{src:"http://static.zybuluo.com/MarlonChiu/sxodezube6trrxitofbx3drp/webpack%E5%85%B6%E5%AE%83%E6%A6%82%E5%BF%B5_2.png",alt:"webpack其它概念_2.png-27.8kB"}})])]),t._v(" "),s("h3",{attrs:{id:"webpack-和-gulp-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack-和-gulp-的区别"}},[t._v("#")]),t._v(" webpack 和 gulp 的区别")]),t._v(" "),s("ul",[s("li",[t._v("webpack 是一种模块化打包工具，主要用于模块化方案，预编译模块的方案；")]),t._v(" "),s("li",[t._v("gulp 是工具链、构建工具，可以配合各种插件做 js 压缩，css压缩，less 编译替代手工实现自动化工作。")]),t._v(" "),s("li",[t._v("Grunt/Gulp 更多的是一种工作流；提供集成所有服务的一站式平台； gulp可以用来优化前端工作流程。")])]),t._v(" "),s("h2",{attrs:{id:"客户端两种存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端两种存储"}},[t._v("#")]),t._v(" 客户端两种存储")]),t._v(" "),s("h3",{attrs:{id:"cookie存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie存储"}},[t._v("#")]),t._v(" Cookie存储")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Cookie是一项很老的技术的，就是因为它老，所以兼容性还是不错的。\n使用Cookie作为本地存储优点：兼容性好，缺点：操作繁琐，只能存简单的数据，还会过期，站点设置httponly的话，JS就不无法操作Cookie了。\n")])])]),s("h3",{attrs:{id:"web-storage存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-storage存储"}},[t._v("#")]),t._v(" Web Storage存储")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("WebStorage是HTML5中为WebApplication提供一种存储的API，目前主流的新版本的浏览器都支持，当然IE789你就没有办法了。WebStorage主要分成localStorage和sessionStorage两种。\n")])])]),s("h4",{attrs:{id:"sessionstorage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage"}},[t._v("#")]),t._v(" sessionStorage")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sessionStorage是个全局对象，它维护着在页面会话(page session)期间有效的存储空间。只要浏览器开着，页面会话周期就会一直持续。当页面重新载入(reload)或者被恢复(restores)时，页面会话也是一直存在的。每在新标签或者新窗口中打开一个新页面，都会初始化一个新的会话。\n")])])]),s("h4",{attrs:{id:"localstorage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#localstorage"}},[t._v("#")]),t._v(" localStorage")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("localStorage也是一个全局变量，它的生命周期比sessionStorage长。localStorage和sessionStorage都继承自Storage因此它们的用法相同。\n")])])]),s("h4",{attrs:{id:"webstorage的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webstorage的优点"}},[t._v("#")]),t._v(" WebStorage的优点")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("使用简单方便，缺点：IE有些版本不支持，不能存复杂的对象，必须先转化成JSON字符串，没有索引搜索效率不高，只能同步读写操作，当写入的数据比较大时可能造成JS引擎堵塞。\n")])])]),s("h4",{attrs:{id:"sessionstorage用法和localstorage区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sessionstorage用法和localstorage区别"}},[t._v("#")]),t._v(" sessionStorage用法和localStorage区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("完全一致，差别只在有效期：\nsessionStorage在用户结束会话（即关闭浏览器或退出账户时失效）；\nlocalStorage无失效期，用户在清理浏览器缓存的时候会被清除。\n")])])]),s("h3",{attrs:{id:"cookie存储和web-storage存储区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie存储和web-storage存储区别"}},[t._v("#")]),t._v(" Cookie存储和Web Storage存储区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("localStorage与sessionStorage作为新时代的产物，相比旧时代的cookie有其巨大的优越性。优越性有三:\n    其一在能存储的数据量，cookie最大能存储4kb的数据，而localStorage与sessionStorage最大能存储5Mb，目前各大浏览器支持的标准都是如此；\n    \n    其二在功能上，cookie只能存储String类型的数据，以往要将用户数据存储在本地，需要将数据拼接成字符串，再存进cookie,取数据的时候同样麻烦，先将整个cookie对象拿到（String对象），再按拼接的规则拆分，再拿需要的数据，存取都很麻烦！\n    localStorage与sessionStorage不仅支持传统的String类型，还可以将json对象存储进去,存取数据都方便不少，json的优越性就不赘述，localStorage与sessionStorage无疑更现代化；\n    \n    其三是cookie是不可或缺的，cookie的作用是与服务器进行交互，作为http规范的一部分而存在；而web storage仅仅是为了在本地‘存储’而生；\n    其四在语义层面上，localStorage与sessionStorage语法更优雅、简便。\n")])])]),s("h3",{attrs:{id:"存储方式的操作对比演示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储方式的操作对比演示"}},[t._v("#")]),t._v(" 存储方式的操作对比演示")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// cookie的操作\n设置cookie: document.cookie = \'key=value\';\n获取cookie: document.cookie;\n删除cookie: document.cookie = "key=value;max-age=0";\n设置max-age存储期限: document.cookie = "key=value;max-age=1000"; // 1000秒\n\n// web storage操作\n保存数据 setItem(key,value)\n读取数据 getItem(key)\n删除单个数据 removeItem(key)\n清空全部数据 clearItem()\n获取数据索引 key(index)\n')])])]),s("h3",{attrs:{id:"cookie-storage-session-关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie-storage-session-关系"}},[t._v("#")]),t._v(" cookie / storage / session 关系")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("cookie")]),t._v(" "),s("ul",[s("li",[t._v("优点：可以解决http无状态问题")]),t._v(" "),s("li",[t._v("缺点：\n"),s("ol",[s("li",[t._v("与服务器交互的时候有数量和长度限制 每个域名最多20条，长度不能超过4KB")]),t._v(" "),s("li",[t._v("安全性问题 容易被人拦截")]),t._v(" "),s("li",[t._v("浪费宽带，每次请求新页面，cookie都会被发过去")]),t._v(" "),s("li",[t._v("不可以跨域")])])])])]),t._v(" "),s("li",[s("p",[t._v("cookie 和session区别")]),t._v(" "),s("ul",[s("li",[t._v("cookie是把数据放在客户的浏览器上，只能存储sting类型")]),t._v(" "),s("li",[t._v("session数据是放在服务器上，能存储json 类型、sting类型")]),t._v(" "),s("li",[t._v("session会在一定的时间内保留数据存在服务器上，当访问增多，\n会比较占你服务器的性能 ，减轻服务器的性能 应当使用cookie")]),t._v(" "),s("li",[t._v("sessionStorage是当前对话的缓存，浏览器窗口关闭即消失，会话级别的存储")]),t._v(" "),s("li",[t._v("localStorage持久存在，除非清除浏览器缓存。")])])])]),t._v(" "),s("h2",{attrs:{id:"数组的一些方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的一些方法"}},[t._v("#")]),t._v(" 数组的一些方法")]),t._v(" "),s("h3",{attrs:{id:"数组去重"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组去重"}},[t._v("#")]),t._v(" 数组去重")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n1.先将原数组进行排序\n2.检查原数组中的第i个元素 与 结果数组中的最后一个元素是否相同，因为已经排序，所以重复元素会在相邻位置\n3.如果不相同，则将该元素存入结果数组中\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("unique1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//先排序")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n1.创建一个新的数组存放结果\n2.创建一个空对象\n3.for循环时，每次取出一个元素与对象进行对比，如果这个元素不重复，\n  则把它存放到结果数组中，同时把这个元素的内容作为对象的一个属性，\n  并赋值为1，存入到第2步建立的对象中。\n说明：至于如何对比，就是每次从原数组中取出一个元素，然后到对象中去访问这个属性，如果能访问到值，则说明重复。\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("unique2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("112")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("112")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("112")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("112")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'str'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'str1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法零")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set(7) {1, 7, 3, 4, 11, 2, 0}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法一")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unique1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (7) [0, 1, 11, 2, 3, 4, 7]  按照Unicode排列了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法二")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unique2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (7) [0, 1, 11, 2, 3, 4, 7]")]),t._v("\n")])])]),s("h3",{attrs:{id:"数组排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组排序"}},[t._v("#")]),t._v(" 数组排序")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function quickSort(arr) {\n  if(arr.length <= 1){\n    return arr;\n  }\n  // 基准索引（理论上可以任意选取）\n  var pivotIndex = parseInt(arr.length/2),\n    // 基准值\n    pivot = arr.splice(pivotIndex,1)[0],\n    leftArr = [],\n    rightArr = [],\n    length = arr.length;\n  // 遍历序列，根据基准拆分为两个子序列\n  for (var i = 0; i < length; i++) {\n    if(arr[i] < pivot){\n      leftArr.push(arr[i]);\n    }else {\n      rightArr.push(arr[i]);\n    }\n    \n  }\n  console.log(pivot); // 输出了三次 3 1 7\n  \n  // 连接左序列、基准、右序列\n  return quickSort(leftArr).concat(pivot, quickSort(rightArr))\n}\nvar demoArr = [8,4,7,2,0,3,1]\n\n// 方法一\nconsole.log(demoArr.sort()); // (7) [0, 1, 2, 3, 4, 7, 8]\n// 方法二\nconsole.log(quickSort(demoArr)) // (7) [0, 1, 2, 3, 4, 7, 8]\n")])])]),s("h2",{attrs:{id:"前端web-h5性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端web-h5性能优化"}},[t._v("#")]),t._v(" 前端WEB/H5性能优化")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 参考CSDN博客\nhttp://blog.csdn.net/lpf1215/article/details/74315797?locationNum=8&fps=1\n")])])]),s("ul",[s("li",[t._v("减少http请求，合理设置 HTTP缓存")]),t._v(" "),s("li",[t._v("使用浏览器缓存")]),t._v(" "),s("li",[t._v("启用压缩")]),t._v(" "),s("li",[t._v("CSS Sprites")]),t._v(" "),s("li",[t._v("LazyLoad Images")]),t._v(" "),s("li",[t._v("CSS放在页面最上部，javascript放在页面最下面")]),t._v(" "),s("li",[t._v("异步请求Callback（就是将一些行为样式提取出来，慢慢的加载信息的内容）")]),t._v(" "),s("li",[t._v("减少cookie传输")]),t._v(" "),s("li",[t._v("Javascript代码优化")]),t._v(" "),s("li",[t._v("CSS选择符优化")]),t._v(" "),s("li",[t._v("CDN加速")]),t._v(" "),s("li",[t._v("反向代理")])]),t._v(" "),s("h2",{attrs:{id:"px-em-rem-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#px-em-rem-区别"}},[t._v("#")]),t._v(" px em rem 区别")]),t._v(" "),s("ul",[s("li",[t._v("px像素（Pixel）。相对长度单位。像素px是相对于显示器屏幕分辨率而言的")]),t._v(" "),s("li",[t._v("em是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸")]),t._v(" "),s("li",[t._v("rem为元素设定字体大小时，仍然是相对大小，但相对的只是HTML根元素")])]),t._v(" "),s("h2",{attrs:{id:"实现一个jsonp请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现一个jsonp请求"}},[t._v("#")]),t._v(" 实现一个jsonp请求")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<script type="text/javascript">\nfunction jsonpCallback(result) {\n    // alert(result);  \n    for(var i in result) {\n        alert(i+":"+result[i]);// 循环输出a:1,b:2,etc.  \n    }\n}\n\nvar JSONP = document.createElement("script");\nJSONP.type = "text/javascript";\nJSONP.src = "http://crossdomain.com/services.php?callback=jsonpCallback";\ndocument.getElementsByTagName("head")[0].appendChild(JSONP);\n<\/script>\n')])])]),s("h2",{attrs:{id:"原型与原型链分析图例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链分析图例"}},[t._v("#")]),t._v(" 原型与原型链分析图例")]),t._v(" "),s("ul",[s("li",[t._v("图例一\n"),s("img",{attrs:{src:"http://static.zybuluo.com/MarlonChiu/v5fxgw1c326yrmvru8gt4qxa/%E5%8E%9F%E5%9E%8B%E9%93%BE%E5%88%86%E6%9E%90%E5%9B%BE%E4%BE%8B_01.png",alt:"原型链分析图例_01.png-35.1kB"}})])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 图例分析说明\n")])])]),s("ul",[s("li",[t._v("图例二\n"),s("img",{attrs:{src:"http://static.zybuluo.com/MarlonChiu/qj4jj2hpkqymby58zjazwl7x/%E5%8E%9F%E5%9E%8B%E9%93%BE%E5%88%86%E6%9E%90%E5%9B%BE%E4%BE%8B_02.png",alt:"原型链分析图例_02.png-46.7kB"}})])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 图例分析说明\n两个空间：栈和堆。在代码未执行之前，JS引擎就会先加载执行一些内置的代码就。在开始之前就先执行了Object定义（function Object(value){}），栈空间会有一个Object引用变量，传的是地址值0x123，开辟出一块空间，该空间就是Object函数对象，函数对象上有一个prototype属性，该属性也是引用类型，传递地址值0x234，开辟出一块新的空间，该空间指向Object原型对象，该Object原型对象的原型上包含hasOwnProperty、toString......等一些属性，也就说在代码执行之前第一列的关系已经存在了。\n\n代码执行function Fn(){}，Fn指向的堆空间中一块区域，地址值为0x345，即Fn函数对象，Fn函数对象有一个prototype属性，该属性也是指向一块地址值0x456，指向Fn原型对象，该对象是一个空对象即{}。这个实例对象的__proto__又会指向Object的函数对象的prototype属性（实例对象的隐式原型等于函数对象的显示原型），地址值也是0x234，也会指向Object原型对象。\n代码执行Fn.prototype.test2 则在Fn原型对象上添加test2()方法\n\n代码执行var fn = new Fn()，fn的地址值为0x567，在堆内存中开辟空间指向Fn实例对象，该对象有隐式原型__proto__，其值是0x456，箭头指向Fn原型对象。Fn实例对象上有个方法test1()。\n\n\nconsole.log(Function.prototype === Function.__proto__)  // true\nconsole.log(Object.prototype.__proto__)  // null\nconsole.log(Object.prototype.toString)  // ƒ toString() { [native code] }  Object原型上有toString方法\n")])])]),s("ul",[s("li",[t._v("图例三\n"),s("img",{attrs:{src:"http://static.zybuluo.com/MarlonChiu/2o4q7d8zguhokxee7b4avun1/%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE%E5%88%86%E6%9E%90%E5%9B%BE%E4%BE%8B_03.png",alt:"原型与原型链分析图例_03.png-129.8kB"}})])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function Foo() {\n}\nvar f1 = new Foo()\nvar f2 = new Foo()\nvar o1 = {}\nvar o2 = {}\n")])])]),s("ul",[s("li",[t._v("图例四\n"),s("img",{attrs:{src:"http://static.zybuluo.com/MarlonChiu/4shqfy3qe573pw8t7fi70jpz/%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8E%9F%E5%9E%8B%E5%88%86%E6%9E%90.png",alt:"函数对象的原型分析.png-60.3kB"}})])]),t._v(" "),s("h2",{attrs:{id:"实现类的继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现类的继承"}},[t._v("#")]),t._v(" 实现类的继承")]),t._v(" "),s("h3",{attrs:{id:"原型链的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链的方法"}},[t._v("#")]),t._v(" 原型链的方法")]),t._v(" "),s("ul",[s("li",[t._v("套路\n"),s("ol",[s("li",[t._v("定义父类型构造函数")]),t._v(" "),s("li",[t._v("给父类型的原型添加方法")]),t._v(" "),s("li",[t._v("定义子类型的构造函数")]),t._v(" "),s("li",[t._v("创建父类型的对象赋值给子类型的原型")]),t._v(" "),s("li",[t._v("将子类型原型的构造属性设置为子类型")]),t._v(" "),s("li",[t._v("给子类型原型添加方法")]),t._v(" "),s("li",[t._v("创建子类型的对象: 可以调用父类型的方法")])])]),t._v(" "),s("li",[t._v("关键\n"),s("ol",[s("li",[t._v("子类型的原型为父类型的一个实例对象\nChild.prototype = new Parent()")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function Parent() {\n    this.pProp = 'this Parent prop'\n}\nParent.prototype.showPProp = function () {\n    console.log('showPProp()', this.pProp)\n}\n\nfunction Child() {\n    this.cProp = 'this Child prop'\n}\n\n// 让子类原型指向父类型实例\nChild.prototype = new Parent()\n// 让子类原型对象构造器属性指向子类\nChild.prototype.constructor = Child\n\nChild.prototype.showCProp = function () {\n    console.log('showCProp()', this.cProp)\n}\n\nvar child = new Child()\nchild.showPProp()\nconsole.log(child.constructor) // ƒ Child() { this.cProp = 'this Child prop'}\nconsole.log(child)   // Child {cProp: \"this Child prop\"}\n")])])]),s("h3",{attrs:{id:"class-类的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-类的方式"}},[t._v("#")]),t._v(" class 类的方式")]),t._v(" "),s("ul",[s("li",[t._v("通过class定义类/实现类的继承")]),t._v(" "),s("li",[t._v("在类中通过constructor定义构造方法")]),t._v(" "),s("li",[t._v("通过new来创建类的实例")]),t._v(" "),s("li",[t._v("通过extends来实现类的继承")]),t._v(" "),s("li",[t._v("通过super调用父类的构造方法")]),t._v(" "),s("li",[t._v("重写从父类中继承的一般方法")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// 用class定义一个Person类\nclass Person{\n    constructor (name, age){   // 类的构造方法\n        this.name = name;\n        this.age = age;\n    }\n    showName (){   // 类的一般方法\n        console.log(this.name, this.age);\n    }\n}\nlet p1 = new Person("TOM", 18);\nconsole.log(p1.name);\np1.showName();\n\n\n// 定义一个Student 继承Person\nclass Student extends Person {  // 定义的Student类继承自Person类\n    constructor (name, age, salary){\n        super(name,age);  // 通过super调用父类的构造方法\n        this.salary = salary;\n    }\n    showName (name, age, salary){\n        console.log(this.name, this.age, this.salary);\n    }\n}\nlet s1 = new Student("MARLON", 26, 17000);\nconsole.log(s1.name);\ns1.showName();\n')])])]),s("h3",{attrs:{id:"object-create-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-create-方法"}},[t._v("#")]),t._v(" Object.create()方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Object.create(prototype, [descriptors])")]),t._v(" "),s("ul",[s("li",[t._v("作用: 以指定对象为原型创建新的对象")]),t._v(" "),s("li",[t._v("为新的对象指定新的属性, 并对属性进行描述\nvalue : 指定值\nwritable : 标识当前属性值是否是可修改的, 默认为 false")])])]),t._v(" "),s("li",[t._v("用法演示")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//  Object.create(prototype, [descriptors])\nvar obj = {n:11};\nvar obj2 = Object.create(obj);\nconsole.log(obj2, obj2.n);   // {} 11\nvar obj3 = Object.create(obj,{\n    m: {\n        value: "asd",\n        writable: false\n    }\n});\nobj3.m = 456;\nconsole.log(obj3.m);  // asd\n')])])]),s("h3",{attrs:{id:"原型链-借用构造函数的组合继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链-借用构造函数的组合继承"}},[t._v("#")]),t._v(" 原型链 + 借用构造函数的组合继承")]),t._v(" "),s("ul",[s("li",[t._v("利用原型链实现对父类型对象的方法继承")]),t._v(" "),s("li",[t._v("利用call()借用父类型构建函数初始化相同属性")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function Person(name, age) {\n    this.name = name\n    this.age = age\n}\nPerson.prototype.setName = function (name) {\n    this.name = name\n}\nfunction Student(name, age, price) { // 身价\n    Person.call(this, name, age)  // 相当于: this.Person(name, age)\n    this.price = price\n}\n\nStudent.prototype = new Person()\nStudent.prototype.constructor = Student\n\nStudent.prototype.setPrice = function (price) {\n    this.price = price\n}\n\nvar s = new Student('Jack', 21, 13000)\ns.setName('Bob')\ns.setPrice(14000)\nconsole.log(s.name, s.age, s.price)\n")])])]),s("hr")])}],!1,null,null,null);a.default=e.exports}}]);